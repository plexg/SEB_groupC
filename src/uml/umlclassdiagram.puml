@startuml
'https://plantuml.com/class-diagram

package classes {
    class Game {
        - Player player
        - List<Room> rooms
        + Game()
        + startGame(Scanner sc)
    }

    class Player {
        - int progress
        - int hp
        - Room currentRoom
        + Player(int progress, int hp, Room currentRoom)
        + setRoom(Room room)
        + getHp(): int
        + setProgress(int progress)
    }

    abstract class Room {
        + playRoom()
    }

    class StartRoom extends Room {
        - Player player
        + StartRoom(Player player)
        + showIntroduction()
        + presentChallenge()
        + checkAnswer(): boolean
        + giveFeedback()
        + triggerMonster()
    }

    class DailyScrumRoom extends Room {
        + playRoom()
    }

    class SprintRetrospectiveRoom extends Room {
        + playRoom()
    }

    class FinalRoom extends Room {
        + playRoom()
    }

    class ScrumBoardRoom extends Room {
        + playRoom()
    }
}

package main {
    class Main {
        + main(String[] args)
    }
}

package Challenge {
    interface ChallengeStrategy {
        + present()
        + check(String input): boolean
    }

    class MultipleChoiceChallenge implements ChallengeStrategy {
        + present()
        + check(String input): boolean
    }
}

Game --> Room : uses
Player --> Room : interacts
Main --> Game : creates
Room <|-- StartRoom
Room <|-- DailyScrumRoom
Room <|-- SprintRetrospectiveRoom
Room <|-- FinalRoom
Room <|-- ScrumBoardRoom
DailyScrumRoom --> ChallengeStrategy : uses
ChallengeStrategy <|.. MultipleChoiceChallenge
StartRoom --> Player : depends on

@enduml